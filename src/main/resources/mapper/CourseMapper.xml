<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.graduation.demo.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="com.graduation.demo.entity.Course">
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="credit" jdbcType="REAL" property="credit" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="major" jdbcType="INTEGER" property="major" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.graduation.demo.entity.CourseWithBLOBs">
    <result column="name" jdbcType="LONGVARCHAR" property="name" />
    <result column="detail" jdbcType="LONGVARCHAR" property="detail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cid, type, credit, grade, major
  </sql>
  <sql id="Blob_Column_List">
    name, detail
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.graduation.demo.entity.CourseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.graduation.demo.entity.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.graduation.demo.entity.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.graduation.demo.entity.CourseWithBLOBs">
    insert into course (cid, type, credit,
      grade, major, name, 
      detail)
    values (#{cid,jdbcType=STRING}, #{type,jdbcType=INTEGER}, #{credit,jdbcType=REAL},
      #{grade,jdbcType=INTEGER}, #{major,jdbcType=INTEGER}, #{name,jdbcType=LONGVARCHAR}, 
      #{detail,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.graduation.demo.entity.CourseWithBLOBs">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="credit != null">
        credit,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="detail != null">
        detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=STRING},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=REAL},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="major != null">
        #{major,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.graduation.demo.entity.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=STRING},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.credit != null">
        credit = #{record.credit,jdbcType=REAL},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update course
    set cid = #{record.cid,jdbcType=STRING},
      type = #{record.type,jdbcType=INTEGER},
      credit = #{record.credit,jdbcType=REAL},
      grade = #{record.grade,jdbcType=INTEGER},
      major = #{record.major,jdbcType=INTEGER},
      name = #{record.name,jdbcType=LONGVARCHAR},
      detail = #{record.detail,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set cid = #{record.cid,jdbcType=STRING},
      type = #{record.type,jdbcType=INTEGER},
      credit = #{record.credit,jdbcType=REAL},
      grade = #{record.grade,jdbcType=INTEGER},
      major = #{record.major,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.graduation.demo.entity.Course">
    <id column="cid" jdbcType="VARCHAR" property="cid" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="period" jdbcType="VARCHAR" property="period" />
    <result column="credit" jdbcType="INTEGER" property="credit" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="maximum" jdbcType="INTEGER" property="maximum" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cid, cname, period, credit, major, maximum, desc
  </sql>
  <select id="selectByExample" parameterType="com.graduation.demo.entity.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where cid = #{cid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from course
    where cid = #{cid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.graduation.demo.entity.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.graduation.demo.entity.Course">
    insert into course (cid, cname, period, 
      credit, major, maximum, 
      desc)
    values (#{cid,jdbcType=VARCHAR}, #{cname,jdbcType=VARCHAR}, #{period,jdbcType=VARCHAR}, 
      #{credit,jdbcType=INTEGER}, #{major,jdbcType=VARCHAR}, #{maximum,jdbcType=INTEGER}, 
      #{desc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.graduation.demo.entity.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="credit != null">
        credit,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="maximum != null">
        maximum,
      </if>
      <if test="desc != null">
        desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        #{period,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="maximum != null">
        #{maximum,jdbcType=INTEGER},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.graduation.demo.entity.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=VARCHAR},
      </if>
      <if test="record.cname != null">
        cname = #{record.cname,jdbcType=VARCHAR},
      </if>
      <if test="record.period != null">
        period = #{record.period,jdbcType=VARCHAR},
      </if>
      <if test="record.credit != null">
        credit = #{record.credit,jdbcType=INTEGER},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.maximum != null">
        maximum = #{record.maximum,jdbcType=INTEGER},
      </if>
      <if test="record.desc != null">
        desc = #{record.desc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set cid = #{record.cid,jdbcType=VARCHAR},
      cname = #{record.cname,jdbcType=VARCHAR},
      period = #{record.period,jdbcType=VARCHAR},
      credit = #{record.credit,jdbcType=INTEGER},
      major = #{record.major,jdbcType=VARCHAR},
      maximum = #{record.maximum,jdbcType=INTEGER},
      desc = #{record.desc,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.graduation.demo.entity.Course">
    update course
    <set>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="maximum != null">
        maximum = #{maximum,jdbcType=INTEGER},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
    </set>
    where cid = #{cid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.graduation.demo.entity.Course">
    update course
    set cname = #{cname,jdbcType=VARCHAR},
      period = #{period,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=INTEGER},
      major = #{major,jdbcType=VARCHAR},
      maximum = #{maximum,jdbcType=INTEGER},
      desc = #{desc,jdbcType=VARCHAR}
    where cid = #{cid,jdbcType=VARCHAR}
  </update>
</mapper>